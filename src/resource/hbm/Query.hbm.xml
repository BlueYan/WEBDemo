<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="com.mark.project.hibernateDemo.query.domain">


    <!-- 用于取别名 在做用VO查询结果集的时候不需要写全限定名称 -->
    <import class="EmployeeVO" rename="EmployeeVO"/>

    <!--
        部门对象
        一个部门拥有多个员工
    -->
    <class name="Department" table="t_dept">
        <id name="id" column="id">
            <generator class="native" />
        </id>
        <property name="name" column="name"/>
        <property name="sn" column="sn"/>
        <property name="province" column="provice"/>
        <property name="city" column="city"/>
        <property name="street" column="street"/>
        <!--
            标识该部门的经理是哪一位员工
            多对一的配置
        -->
        <many-to-one name="manager" column="MANAGER_ID" class="Employee"/>
    </class>

    <!--
        员工对象
        一个员工只能在一个部门
    -->
    <class name="Employee" table="t_employee">
        <id name="id" column="id">
            <generator class="native"/>

        </id>
        <property name="name" column="name"/>
        <property name="salary" column="salary"/>
        <property name="hireDate" column="hireDate"/>
        <!--
            一个部门可以拥有多个员工 所以部门的主键就是员工表的外键dept_id
        -->
        <many-to-one name="dept" column="dept_id" class="Department"/>
        <!--
            一个员工可以开发多个项目
            inverse: 放弃维护权限
        -->
        <!--<bag name="projects" table="project_employee" inverse="true">-->
            <!--<key column="employee_id"/>-->
            <!--<many-to-many class="Project" column="project_id"/>-->
        <!--</bag>-->
    </class>

    <!--
        电话对象
        一个员工可以拥有多个电话
        一个电话只能对应一个员工
    -->
    <class name="Phone" table="t_phone">
        <id name="id" column="id">
            <generator class="native"/>
        </id>
        <property name="number" column="number"/>
        <property name="type" column="type"/>
        <many-to-one name="employee" column="employee_id" class="Employee"/>
    </class>


    <!--
        项目对象
        一个项目可以拥有多个员工
        一个员工可以开发多个项目
    -->
    <class name="Project" table="t_project">
        <id name="id" column="id">
            <generator class="native"/>
        </id>
        <property name="name" column="name"/>
        <many-to-one name="employee" column="MANAGER_ID" class="Employee"/>
        <!--
            多对多
        -->
        <bag name="employees" table="project_employee">
            <key column="project_id"/>
            <many-to-many class="Employee" column="employee_id"/>
        </bag>
    </class>




</hibernate-mapping>